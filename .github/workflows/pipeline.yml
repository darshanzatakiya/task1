# The name of the workflow.
name: Build and Deploy

# Run the workflow when code is pushed to the main branch
# on:
#   push:
#     branches:
#       - mainon:
on:
  push:
    branches:
      - main  # Change this to your target branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to the main branch


# Set environment variables
env:
  MONGODB_URI: ${{ secrets.MONGODB_URI }}

# This is the workflow that is being run.
jobs:
  build-and-deploy:
    # This is telling GitHub to run the workflow on the latest version of Ubuntu.
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Install dependencies and run tests for the client application
      - name: Install Client
        working-directory: ./ui
        run: |
          npm install
          npm run build

      # Install dependencies, export environment variables to be used by application and run tests for the server application
      - name: Install Server
        working-directory: ./api
        run: |
          npm install
          npm run build

      # # Build a Docker image for the server application
      # - name: Build Docker Image
      #   # Build image with tag darshanzatakiya/sgp-ii:api
      #   run: |
      #     docker build -t darshanzatakiya/sgp-ii:webapp-${{github.run_number}} -t darshanzatakiya/sgp-ii:webapp-latest .

      # # Log in to Docker Hub using credentials from repository secrets
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # # Push the Docker images to Docker Hub
      # - name: Push Docker Images to Docker Hub
      #   run: |
      #     docker push darshanzatakiya/sgp-ii:webapp-${{github.run_number}}
      #     docker push darshanzatakiya/sgp-ii:webapp-latest


       # Install AWS Tools for PowerShell
       - name: Install AWS Tools for PowerShell
       run: |
         Install-Module -Name AWSPowerShell -Force -Scope CurrentUser

     # Authenticate Docker to Amazon ECR using AWS Tools for PowerShell
     - name: Authenticate to Amazon ECR
       shell: pwsh
       run: |
         (Get-ECRLoginCommand -Region ${{ eu-north-1 }}).Password | docker login --username AWS --password-stdin ${{ 637423323200.dkr.ecr.eu-north-1.amazonaws.com }}

     # Build the Docker image
     - name: Build Docker Image
       run: |
         docker build -t ${{ webapp }} .

     # Tag the Docker image
     - name: Tag Docker Image
       run: |
         docker tag ${{ webapp }}:latest ${{ 637423323200.dkr.ecr.eu-north-1.amazonaws.com }}/{{ webapp }}:latest

     # Push the Docker image to Amazon ECR
     - name: Push Docker Image to Amazon ECR
       run: |
         docker push ${{ 637423323200.dkr.ecr.eu-north-1.amazonaws.com }}/{{ webapp }}:latest